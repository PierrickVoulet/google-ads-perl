#!/usr/bin/perl -w
#
# Copyright 2019, Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Functional test for the code examples, to make sure the examples run
# with no exceptions.

use strict;
use warnings;

use lib qw(. lib t/utils);
use TestAPIUtils;
use TestUtils qw(get_test_client read_client_properties);

use Test::More (tests => 44);

# Get the API client for the functional tests.
my $client = get_test_client();
if (!$client) {
  plan skip_all => "Can't create test API client, make sure your " .
    "'t/testdata/googleads_test.properties' is properly set. " .
    "Skipping functional tests.";
}

# Read the 'customerId' and 'managerCustomerId' values from the
# 'testdata/googleads_test.properties' configuration file.
my $properties          = read_client_properties();
my $customer_id         = $properties->getProperty("customerId");
my $manager_customer_id = $properties->getProperty("managerCustomerId");

############################## Test Dependencies ##############################
# Set up the objects that are required to run all the examples.

# Objects for search campaigns.
my $search_campaign_id =
  TestAPIUtils::create_campaign($client, $customer_id, "SEARCH");
my $search_ad_group_id =
  TestAPIUtils::create_ad_group($client, $customer_id, $search_campaign_id);
my $search_text_ad_id =
  TestAPIUtils::create_text_ad($client, $customer_id, $search_ad_group_id);
my $search_keyword_id =
  TestAPIUtils::create_keyword($client, $customer_id, $search_ad_group_id);

# Objects for display campaigns.
my $display_campaign_id =
  TestAPIUtils::create_campaign($client, $customer_id, "DISPLAY");
my $display_ad_group_id =
  TestAPIUtils::create_ad_group($client, $customer_id, $display_campaign_id);

# Objects for Gmail campaigns.
my $gmail_campaign_id =
  TestAPIUtils::create_campaign_with_sub_type($client, $customer_id,
  "DISPLAY", "DISPLAY_GMAIL_AD");
my $gmail_ad_group_id =
  TestAPIUtils::create_ad_group($client, $customer_id, $gmail_campaign_id);

# Objects for labels.
my $label_id = TestAPIUtils::create_label($client, $customer_id);

###############################################################################

################################## Examples ##################################

# account_management
# NOTE: Skip the link_manager_to_client.pl since $customer_id and
# $manager_customer_id might have already been linked together.
require qw(examples/account_management/create_customer.pl);
ok(create_customer($client, $manager_customer_id),
  "Test of create_customer example");
require qw(examples/account_management/get_account_changes.pl);
ok(
  get_account_changes($client, $customer_id),
  "Test of get_account_changes example"
);
require qw(examples/account_management/get_account_information.pl);
ok(
  get_account_information($client, $customer_id),
  "Test of get_account_information example"
);
require qw(examples/account_management/list_accessible_customers.pl);
ok(
  list_accessible_customers($client),
  "Test of list_accessible_customers example"
);

# basic_operations
require qw(examples/basic_operations/add_ad_groups.pl);
ok(add_ad_groups($client, $customer_id, $search_campaign_id),
  "Test of add_ad_groups example");
require qw(examples/basic_operations/add_campaigns.pl);
ok(add_campaigns($client, $customer_id), "Test of add_campaigns example");
require qw(examples/basic_operations/add_expanded_text_ads.pl);
ok(add_expanded_text_ads($client, $customer_id, $search_ad_group_id),
  "Test of add_expanded_text_ads example");
require qw(examples/basic_operations/add_keywords.pl);
ok(add_keywords($client, $customer_id, $search_ad_group_id, "mars cruise"),
  "Test of add_keywords example");
require qw(examples/basic_operations/get_ad_groups.pl);
ok(get_ad_groups($client, $customer_id, $search_campaign_id),
  "Test of get_ad_groups example");
require qw(examples/basic_operations/get_artifact_metadata.pl);
ok(
  get_artifact_metadata($client, "campaign"),
  "Test of get_artifact_metadata example"
);
require qw(examples/basic_operations/get_campaigns.pl);
ok(get_campaigns($client, $customer_id), "Test of get_campaigns example");
require qw(examples/basic_operations/get_expanded_text_ads.pl);
ok(get_expanded_text_ads($client, $customer_id, $search_ad_group_id),
  "Test of get_expanded_text_ads example");
require qw(examples/basic_operations/get_keywords.pl);
ok(get_keywords($client, $customer_id, $search_ad_group_id),
  "Test of get_keywords example");
require qw(examples/basic_operations/pause_ad.pl);
ok(pause_ad($client, $customer_id, $search_ad_group_id, $search_text_ad_id),
  "Test of pause_ad example");
# NOTE: Skip examples that remove as objects will be removed later.
require qw(examples/basic_operations/update_ad_group.pl);
ok(update_ad_group($client, $customer_id, $search_ad_group_id, 600000),
  "Test of update_ad_group example");
require qw(examples/basic_operations/update_campaign.pl);
ok(update_campaign($client, $customer_id, $search_campaign_id),
  "Test of update_campaign example");
require qw(examples/basic_operations/update_keyword.pl);
ok(
  update_keyword(
    $client, $customer_id, $search_ad_group_id, $search_keyword_id
  ),
  "Test of update_keyword example"
);

# billing
# NOTE: Skip the add_account_budget_proposal.pl as it requires additional setup.
require qw(examples/billing/get_account_budget_proposals.pl);
ok(
  get_account_budget_proposals($client, $customer_id),
  "Test of get_account_budget_proposals example"
);
require qw(examples/billing/get_account_budgets.pl);
ok(
  get_account_budgets($client, $customer_id),
  "Test of get_account_budgets example"
);
require qw(examples/billing/get_billing_setup.pl);
ok(
  get_billing_setup($client, $customer_id),
  "Test of get_billing_setup example"
);
# NOTE: Skip the remove_billing_setup.pl as it requires additional setup.

# campaign_management
require qw(
  examples/campaign_management/add_campaign_bid_modifier.pl);
ok(add_campaign_bid_modifier($client, $customer_id, $search_campaign_id, 1.5),
  "Test of add_campaign_bid_modifier example");
require qw(
  examples/campaign_management/add_campaign_labels.pl);
ok(
  add_campaign_labels(
    $client, $customer_id,
    [$search_campaign_id, $display_campaign_id, $gmail_campaign_id], $label_id
  ),
  "Test of add_campaign_labels example"
);
require qw(
  examples/campaign_management/get_all_disapproved_ads.pl);
ok(get_all_disapproved_ads($client, $customer_id, $search_campaign_id),
  "Test of get_all_disapproved_ads example");
require qw(
  examples/campaign_management/get_campaigns_by_label.pl);
ok(get_campaigns_by_label($client, $customer_id, $label_id),
  "Test of get_campaigns_by_label example");
require qw(examples/campaign_management/set_ad_parameters.pl);
ok(
  set_ad_parameters(
    $client, $customer_id, $search_ad_group_id, $search_keyword_id
  ),
  "Test of set_ad_parameters example"
);

# error_handling
require qw(examples/error_handling/handle_partial_failure.pl);
ok(handle_partial_failure($client, $customer_id, $search_ad_group_id),
  "Test of handle_partial_failure example");

# hotel_ads
# NOTE: Skip the ad_hotel_ad.pl as it requires additional setup.
# NOTE: Skip the add_hotel_ad_group_bid_modifiers.pl as it requires additional setup.
# NOTE: Skip the add_hotel_listing_group_tree.pl as it requires additional setup.

# misc
require qw(examples/misc/get_all_image_assets.pl);
ok(
  get_all_image_assets($client, $customer_id),
  "Test of get_all_image_assets example"
);
require qw(examples/misc/get_all_videos_and_images.pl);
ok(
  get_all_videos_and_images($client, $customer_id),
  "Test of get_all_videos_and_images example"
);
require qw(examples/misc/upload_image.pl);
ok(upload_image($client, $customer_id), "Test of upload_image example");

# planning
require qw(examples/planning/add_keyword_plan.pl);
ok(add_keyword_plan($client, $customer_id), "Test of add_keyword_plan example");
# NOTE: Skip the generate_forecast_metrics.pl as it requires additional setup.
require qw(examples/planning/generate_keyword_ideas.pl);
ok(
  generate_keyword_ideas(
    $client, $customer_id, [21167,  20321],
    1000,                  ["cars", "volvo"]
  ),
  "Test of generate_keyword_ideas example"
);

# recommendations
# NOTE: Skip the apply_recommendation.pl as it requires additional setup.
# NOTE: Skip the dismiss_recommendation.pl as it requires additional setup.
require qw(examples/recommendations/get_text_ad_recommendations.pl);
ok(
  get_text_ad_recommendations($client, $customer_id),
  "Test of get_text_ad_recommendations example"
);

# remarketing
require qw(examples/remarketing/add_conversion_action.pl);
ok(
  add_conversion_action($client, $customer_id),
  "Test of add_conversion_action example"
);

# reporting
require qw(examples/reporting/get_hotel_ads_performance.pl);
ok(
  get_hotel_ads_performance($client, $customer_id),
  "Test of get_hotel_ads_performance example"
);
require qw(examples/reporting/get_keyword_stats.pl);
ok(
  get_keyword_stats($client, $customer_id),
  "Test of get_keyword_stats example"
);

# shopping_ads
# NOTE: Skip the add_shopping_product_ad.pl as it requires a merchant account.
# NOTE: Skip the add_shopping_product_listing_group_tree.pl as it requires a merchant account.
# NOTE: Skip the add_shopping_smart_ad.pl as it requires a merchant account.
require qw(examples/shopping_ads/get_product_bidding_category_constant.pl);
ok(
  get_product_bidding_category_constant($client, $customer_id),
  "Test of get_product_bidding_category_constant example"
);

# targeting
require qw(examples/targeting/add_campaign_targeting_criteria.pl);
ok(
  add_campaign_targeting_criteria(
    $client, $customer_id, $display_campaign_id, "jupiter cruise", 21167
  ),
  "Test of add_campaign_targeting_criteria example"
);
require qw(examples/targeting/add_customer_negative_criteria.pl);
ok(
  add_customer_negative_criteria($client, $customer_id),
  "Test of add_campaign_targeting_criteria example"
);
require qw(examples/targeting/get_campaign_targeting_criteria.pl);
ok(
  get_campaign_targeting_criteria($client, $customer_id, $display_campaign_id),
  "Test of get_campaign_targeting_criteria example"
);
require qw(examples/targeting/get_geo_target_constant_by_names.pl);
ok(
  get_geo_target_constant_by_names(
    $client, ["Paris", "Quebec", "Spain", "Deutschland"],
    "en", "FR"
  ),
  "Test of get_geo_target_constant_by_names example"
);

###############################################################################

############################## Test Dependencies ##############################
# Cleaning up the test dependencies.

# Objects for search campaigns .
require qw(examples/basic_operations/remove_keyword.pl);
ok(
  remove_keyword(
    $client, $customer_id, $search_ad_group_id, $search_keyword_id
  ),
  "Test of remove_keyword example"
);
require qw(examples/basic_operations/remove_ad.pl);
ok(remove_ad($client, $customer_id, $search_ad_group_id, $search_text_ad_id),
  "Test of remove_ad example");
require qw(examples/basic_operations/remove_ad_group.pl);
ok(remove_ad_group($client, $customer_id, $search_ad_group_id),
  "Test of remove_ad_group example");
require qw(examples/basic_operations/remove_campaign.pl);
ok(remove_campaign($client, $customer_id, $search_campaign_id),
  "Test of remove_campaign example");

# Objects for display campaigns.
remove_ad_group($client, $customer_id, $display_ad_group_id);
remove_campaign($client, $customer_id, $display_campaign_id);

# Objects for Gmail campaigns.
remove_ad_group($client, $customer_id, $gmail_ad_group_id);
remove_campaign($client, $customer_id, $gmail_campaign_id);

# Objects for labels.
TestAPIUtils::delete_label($client, $customer_id, $label_id);
###############################################################################
